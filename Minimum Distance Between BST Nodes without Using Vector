/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        int minDiff = INT_MAX;
        int prevVal = -1;
        minDiffInBSTHelper(root, minDiff, prevVal);
        return minDiff;
    }
    
    void minDiffInBSTHelper(TreeNode* node, int& minDiff, int& prevVal) {
        if (node) {
            minDiffInBSTHelper(node->left, minDiff, prevVal);
            if (prevVal != -1) {
                minDiff = min(minDiff, node->val - prevVal);
            }
            prevVal = node->val;
            minDiffInBSTHelper(node->right, minDiff, prevVal);
        }
    }
};
